{"version":3,"file":"static/js/262.c2e796f7.chunk.js","mappings":"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","sources":["components/Weather/Weather.styled.js","components/Search/Search.styled.js","components/Search/Search.js","components/Weather/Weather.js","pages/WeatherPage.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Content = styled.div`\r\n  padding: 10px;\r\n  margin-top: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  gap: 50px;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  gap: 50px;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  height: 30px;\r\n  display: flex;\r\n  cursor: pointer;\r\n  padding: 10px 20px;\r\n  background-color: #fff;\r\n  border-radius: 30px;\r\n  align-items: center;\r\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  height: 100%;\r\n  outline: none;\r\n  border: none;\r\n  font-weight: 500;\r\n  transition: 0.8s;\r\n  background: transparent;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: none;\r\n  padding: 10px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  background-color: white;\r\n`;\r\n\r\nexport const Image = styled(AiOutlineSearch)`\r\n  color: #1daf;\r\n  font-size: 18px;\r\n`;\r\n","import { Button, Container, Form, Image, Input } from \"./Search.styled\";\r\n\r\nconst Search = ({ onClick }) => {\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={onClick}>\r\n        <Input placeholder=\"Шукати місто...\" name=\"search\" />\r\n        <Button type=\"submit\">\r\n          <Image />\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { searchWeather } from \"../../redux/weather/operations\";\r\nimport { selectCities, selectCityList } from \"../../redux/weather/selectors\";\r\nimport { WeatherCard } from \"../WeatherCard\";\r\nimport { Content, List } from \"./Weather.styled\";\r\nimport { Search } from \"../Search\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { Toaster, toast } from \"react-hot-toast\";\r\nimport translate from \"translate\";\r\n\r\nconst Weather = () => {\r\n  translate.engine = \"google\";\r\n  translate.key = \"123123\";\r\n  translate.from = \"uk\";\r\n  const dispatch = useDispatch();\r\n  const list = useSelector(selectCityList);\r\n  const cities = useSelector(selectCities);\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const city = event.currentTarget.search.value.trim();\r\n\r\n    if (city === \"\") {\r\n      return toast(\"Введіть місто\", {\r\n        duration: 2000,\r\n        style: {\r\n          backgroundColor: \"red\",\r\n          color: \"white\",\r\n          fontSize: \"20px\",\r\n        },\r\n      });\r\n    }\r\n\r\n    try {\r\n      const translateCityToEnglish = await translate(city, \"en\");\r\n\r\n      const condition = cities.some((item) => {\r\n        return item.toLowerCase() === translateCityToEnglish.toLowerCase();\r\n      });\r\n\r\n      if (condition) {\r\n        return toast(\"Це місто вже використовується\", {\r\n          duration: 2000,\r\n          style: {\r\n            backgroundColor: \"red\",\r\n            color: \"white\",\r\n            fontSize: \"20px\",\r\n          },\r\n        });\r\n      }\r\n\r\n      dispatch(searchWeather(translateCityToEnglish));\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <Content>\r\n      <Search onClick={onSubmit} />\r\n      <List>\r\n        {list.map((item, idx) => {\r\n          const id = nanoid();\r\n          const currentWeather = [...item].splice(1, 1);\r\n\r\n          return currentWeather.map(({ dt, name, weather, main, wind }) => {\r\n            return (\r\n              <WeatherCard\r\n                dt={dt}\r\n                name={name}\r\n                weather={weather}\r\n                main={main}\r\n                wind={wind}\r\n                key={id}\r\n                list={item}\r\n                city={cities[idx]}\r\n                idx={idx}\r\n                icon={true}\r\n              />\r\n            );\r\n          });\r\n        })}\r\n      </List>\r\n      <Toaster />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import { Weather } from \"../components/Weather\";\r\n\r\nconst WeatherPage = () => {\r\n  return <Weather />;\r\n};\r\n\r\nexport default WeatherPage;\r\n"],"names":["Content","styled","div","_templateObject","_taggedTemplateLiteral","List","ul","_templateObject2","Container","Form","form","Input","input","_templateObject3","Button","button","_templateObject4","Image","AiOutlineSearch","_templateObject5","_ref","onClick","_jsx","children","_jsxs","onSubmit","placeholder","name","type","translate","engine","key","from","dispatch","useDispatch","list","useSelector","selectCityList","cities","selectCities","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","city","translateCityToEnglish","wrap","_context","prev","next","preventDefault","currentTarget","search","value","trim","abrupt","toast","duration","style","backgroundColor","color","fontSize","sent","some","item","toLowerCase","searchWeather","t0","stop","_x","apply","arguments","Search","map","idx","id","nanoid","_toConsumableArray","splice","_ref2","dt","weather","main","wind","WeatherCard","icon","Toaster","Weather"],"sourceRoot":""}