{"version":3,"file":"static/js/301.3f2e112f.chunk.js","mappings":"6NAEaA,E,QAAYC,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yH,uCC2CnC,EApCa,WACX,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAiBC,EAAAA,EAAAA,GAAIJ,GAAMK,OAAO,EAAG,GAwB3C,OAtBAC,EAAAA,EAAAA,YAAU,WAmBRC,UAAUC,YAAYC,oBAlBE,SAACC,GACvB,IAAMC,EAAkB,CACtBC,IAAKF,EAASG,OAAOC,SACrBC,IAAKL,EAASG,OAAOG,WAGvBlB,GAASmB,EAAAA,EAAAA,GAAWN,GACtB,IAEsB,SAACO,GACrB,OAAOC,EAAAA,EAAAA,IACL,iTACA,CACEC,SAAU,IACVC,QAASH,EAAMI,SAGrB,GAEF,GAAG,CAACxB,KAGFyB,EAAAA,EAAAA,MAAC9B,EAAS,CAAA+B,SAAA,EACRC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wGACJC,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAACC,MAAM,EAAO3B,KAAMA,EAAMG,eAAgBA,IAAkB,KACxEsB,EAAAA,EAAAA,KAACG,EAAAA,GAAO,CAACC,UAAW,IAAMC,cAAY,MAG5C,ECrCA,EAJiB,WACf,OAAOL,EAAAA,EAAAA,KAACM,EAAI,GACd,C","sources":["components/Home/Home.styled.js","components/Home/Home.js","pages/HomePage.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n`;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getWeather } from \"../../redux/weather/operations\";\r\nimport { Container } from \"./Home.styled\";\r\n\r\nimport { WeatherCard } from \"../WeatherCard\";\r\nimport { selectList } from \"../../redux/weather/selectors\";\r\nimport { Toaster, toast } from \"react-hot-toast\";\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const list = useSelector(selectList);\r\n  const currentWeather = [...list].splice(1, 1);\r\n\r\n  useEffect(() => {\r\n    const successCallback = (position) => {\r\n      const currentPosition = {\r\n        lat: position.coords.latitude,\r\n        lon: position.coords.longitude,\r\n      };\r\n\r\n      dispatch(getWeather(currentPosition));\r\n    };\r\n\r\n    const errorCallback = (error) => {\r\n      return toast(\r\n        \"Ми не змогли отримати вашу геолокацію для прогнозу погоди\",\r\n        {\r\n          duration: 2000,\r\n          toastId: error.message,\r\n        }\r\n      );\r\n    };\r\n    navigator.geolocation.getCurrentPosition(successCallback, errorCallback);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Ваш прогноз погоди</h1>\r\n      <WeatherCard icon={false} list={list} currentWeather={currentWeather} />;\r\n      <Toaster autoClose={5000} closeOnClick />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { Home } from \"../components/Home\";\r\n\r\nconst HomePage = () => {\r\n  return <Home />;\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","dispatch","useDispatch","list","useSelector","selectList","currentWeather","_toConsumableArray","splice","useEffect","navigator","geolocation","getCurrentPosition","position","currentPosition","lat","coords","latitude","lon","longitude","getWeather","error","toast","duration","toastId","message","_jsxs","children","_jsx","WeatherCard","icon","Toaster","autoClose","closeOnClick","Home"],"sourceRoot":""}