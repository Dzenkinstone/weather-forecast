{"version":3,"file":"static/js/262.9561dd8a.chunk.js","mappings":"6PAEaA,EAAUC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8IASpBC,EAAOJ,EAAAA,EAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,kH,UCRhBI,EAAYP,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gFAMtBK,EAAOR,EAAAA,EAAOS,KAAIH,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,kNAWlBO,EAAQV,EAAAA,EAAOW,MAAKC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,oIASpBU,EAASb,EAAAA,EAAOc,OAAMC,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,0LAWtBa,GAAQhB,EAAAA,EAAAA,GAAOiB,EAAAA,IAAPjB,CAAuBkB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,+C,SCzB5C,EAbe,SAAHgB,GAAqB,IAAfC,EAAOD,EAAPC,QAChB,OACEC,EAAAA,EAAAA,KAACd,EAAS,CAAAe,UACRC,EAAAA,EAAAA,MAACf,EAAI,CAACgB,SAAUJ,EAAQE,SAAA,EACtBD,EAAAA,EAAAA,KAACX,EAAK,CAACe,YAAY,yEAAkBC,KAAK,YAC1CL,EAAAA,EAAAA,KAACR,EAAM,CAACc,KAAK,SAAQL,UACnBD,EAAAA,EAAAA,KAACL,EAAK,UAKhB,E,oBCLMY,EAAWC,EAAQ,MAqDzB,EAnDgB,WACd,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,IAwB3B,OACEb,EAAAA,EAAAA,MAACxB,EAAO,CAAAuB,SAAA,EACND,EAAAA,EAAAA,KAACgB,EAAM,CAACjB,QAxBK,SAACkB,GAChBA,EAAMC,iBACN,IAAMC,EAAOZ,EACXU,EAAMG,cAAcC,OAAOC,MAAMC,OAAOC,eAK1C,GAFkBV,EAAOW,MAAK,SAACC,GAAI,OAAKA,EAAKF,gBAAkBL,CAAI,IAGjE,OAAOQ,EAAAA,EAAAA,IAAM,kKAAiC,CAC5CC,SAAU,IACVC,MAAO,CACLC,gBAAiB,MACjBC,MAAO,QACPC,SAAU,UAKhBvB,GAASwB,EAAAA,EAAAA,GAAcd,GACzB,KAKInB,EAAAA,EAAAA,KAACjB,EAAI,CAAAkB,SACFU,EAAKuB,KAAI,SAACR,EAAMS,GACf,IAAMC,GAAKC,EAAAA,EAAAA,MACLC,GAAiBC,EAAAA,EAAAA,GAAIb,GAAMc,OAAO,EAAG,GAC3C,OACExC,EAAAA,EAAAA,KAACyC,EAAAA,EAAW,CAEV9B,KAAMe,EACNY,eAAgBA,EAChBnB,KAAML,EAAOqB,GACbA,IAAKA,EACLO,MAAM,GALDN,EAQX,OAEFpC,EAAAA,EAAAA,KAAC2C,EAAAA,GAAO,MAGd,ECrDA,EAJoB,WAClB,OAAO3C,EAAAA,EAAAA,KAAC4C,EAAO,GACjB,C","sources":["components/Weather/Weather.styled.js","components/Search/Search.styled.js","components/Search/Search.js","components/Weather/Weather.js","pages/WeatherPage.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Content = styled.div`\r\n  margin-top: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  gap: 70px;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  gap: 50px;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  height: 30px;\r\n  display: flex;\r\n  cursor: pointer;\r\n  padding: 10px 20px;\r\n  background-color: #fff;\r\n  border-radius: 30px;\r\n  align-items: center;\r\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  height: 100%;\r\n  outline: none;\r\n  border: none;\r\n  font-weight: 500;\r\n  transition: 0.8s;\r\n  background: transparent;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: none;\r\n  padding: 10px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  background-color: white;\r\n`;\r\n\r\nexport const Image = styled(AiOutlineSearch)`\r\n  color: #1daf;\r\n  font-size: 18px;\r\n`;\r\n","import { Button, Container, Form, Image, Input } from \"./Search.styled\";\r\n\r\nconst Search = ({ onClick }) => {\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={onClick}>\r\n        <Input placeholder=\"Шукати місто...\" name=\"search\" />\r\n        <Button type=\"submit\">\r\n          <Image />\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { searchWeather } from \"../../redux/weather/operations\";\r\nimport { selectCities, selectCityList } from \"../../redux/weather/selectors\";\r\nimport { WeatherCard } from \"../WeatherCard\";\r\nimport { Content, List } from \"./Weather.styled\";\r\nimport { Search } from \"../Search\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { Toaster, toast } from \"react-hot-toast\";\r\nconst translit = require(\"ua-en-translit\");\r\n\r\nconst Weather = () => {\r\n  const dispatch = useDispatch();\r\n  const list = useSelector(selectCityList);\r\n  const cities = useSelector(selectCities);\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const city = translit(\r\n      event.currentTarget.search.value.trim().toLowerCase()\r\n    );\r\n\r\n    const condition = cities.some((item) => item.toLowerCase() === city);\r\n\r\n    if (condition) {\r\n      return toast(\"Це місто вже використовується\", {\r\n        duration: 2000,\r\n        style: {\r\n          backgroundColor: \"red\",\r\n          color: \"white\",\r\n          fontSize: \"20px\",\r\n        },\r\n      });\r\n    }\r\n\r\n    dispatch(searchWeather(city));\r\n  };\r\n\r\n  return (\r\n    <Content>\r\n      <Search onClick={onSubmit} />\r\n      <List>\r\n        {list.map((item, idx) => {\r\n          const id = nanoid();\r\n          const currentWeather = [...item].splice(1, 1);\r\n          return (\r\n            <WeatherCard\r\n              key={id}\r\n              list={item}\r\n              currentWeather={currentWeather}\r\n              city={cities[idx]}\r\n              idx={idx}\r\n              icon={true}\r\n            />\r\n          );\r\n        })}\r\n      </List>\r\n      <Toaster />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import { Weather } from \"../components/Weather\";\r\n\r\nconst WeatherPage = () => {\r\n  return <Weather />;\r\n};\r\n\r\nexport default WeatherPage;\r\n"],"names":["Content","styled","div","_templateObject","_taggedTemplateLiteral","List","ul","_templateObject2","Container","Form","form","Input","input","_templateObject3","Button","button","_templateObject4","Image","AiOutlineSearch","_templateObject5","_ref","onClick","_jsx","children","_jsxs","onSubmit","placeholder","name","type","translit","require","dispatch","useDispatch","list","useSelector","selectCityList","cities","selectCities","Search","event","preventDefault","city","currentTarget","search","value","trim","toLowerCase","some","item","toast","duration","style","backgroundColor","color","fontSize","searchWeather","map","idx","id","nanoid","currentWeather","_toConsumableArray","splice","WeatherCard","icon","Toaster","Weather"],"sourceRoot":""}